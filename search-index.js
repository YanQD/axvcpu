var searchIndex = new Map(JSON.parse('[["axvcpu",{"t":"KKFFGKFPPPRPPPPPPPPPRPPPPPPPRPPPGNNMNNNNNNNNNNNHNNNNNNNNNNNNNNHHMNMNNNMNNNNNNNNNNNMNNMMNNNMNHMNMMNMNNMNNNNNNNNNNNNNNNNNNNMNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["AxArchPerCpu","AxArchVCpu","AxPerCpu","AxVCpu","AxVCpuExitReason","AxVCpuHal","AxVCpuInnerMut","Blocked","CpuDown","CpuUp","CreateConfig","Created","ExternalInterrupt","FailEntry","Free","Halt","Hypercall","Invalid","IoRead","IoWrite","MmHal","MmioRead","MmioWrite","NestedPageFault","Nothing","Ready","Running","SendIPI","SetupConfig","SysRegRead","SysRegWrite","SystemDown","VCpuState","arch_checked","arch_checked_mut","bind","","borrow","","","","","borrow_mut","","","","","clear_current_vcpu","clone","clone_into","clone_to_uninit","drop","eq","favor_phys_cpu","fmt","","from","","","","","get_arch_vcpu","get_current_vcpu","get_current_vcpu_mut","hardware_disable","","hardware_enable","","id","init","inject_interrupt","","into","","","","","irq_fetch","","irq_hanlder","","is_bsp","is_enabled","","manipulate_arch_vcpu","new","","","new_uninit","phys_cpu_set","run","","set_current_vcpu","set_entry","","set_ept_root","set_gpr","","set_return_value","","set_state","setup","","state","to_owned","transition_state","try_from","","","","","try_into","","","","","type_id","","","","","unbind","","with_current_cpu_set","with_state_transition","_state","access_flags","addr","","","","","arg","args","data","","entry_point","hardware_entry_failure_reason","nr","port","","reg","","reg_width","send_to_all","send_to_self","signed_ext","target_cpu","","target_cpu_aux","value","vector","","width","","",""],"q":[[0,"axvcpu"],[125,"axvcpu::AxVCpuExitReason"],[157,"axvcpu::percpu"],[158,"axvcpu::arch_vcpu"],[159,"axerrno"],[160,"axvcpu::vcpu"],[161,"axvcpu::exit"],[162,"core::fmt"],[163,"core::option"],[164,"axvisor_api::vmm"],[165,"core::ops::function"],[166,"axaddrspace::addr"],[167,"core::result"],[168,"core::any"],[169,"page_table_entry"],[170,"axaddrspace::device"],[171,"axvcpu::hal"]],"i":"```````AfAn0n211211211El22223321222`b02Ab1En15620156`66626156201561``f303235231267444420325023252`52552522522723126731267312675222CfCjCnD`DbDf4DhDj4Dn2E`2Eb2868Eh095006Ej1:924","f":"`````````````````````````````````{{{d{{b{c}}}}}{{d{c}}}f}{{{d{h{b{c}}}}}{{d{hc}}}f}{{{d{h{n{}{{j{c}}{l{e}}}}}}}A`{}{}}{{{d{{Ab{c}}}}}A`n}{d{{d{c}}}{}}0000{{{d{h}}}{{d{hc}}}{}}0000{{}Ad}{{{d{Af}}}Af}{{d{d{hc}}}Ad{}}{{dAh}Ad}{{{d{h{b{c}}}}}Adf}{{{d{Af}}{d{Af}}}Aj}{{{d{{Ab{c}}}}}Aln}{{{d{An}}{d{hB`}}}Bb}{{{d{Af}}{d{hB`}}}Bb}{cc{}}0000{{{d{{Ab{c}}}}}{{d{hc}}}n}{{}{{Bd{{d{{Ab{c}}}}}}}n}{{}{{Bd{{d{h{Ab{c}}}}}}}n}{{{d{hf}}}A`}{{{d{h{b{c}}}}}A`f}10{{{d{{Ab{c}}}}}Bfn}{{{d{h{b{c}}}}Al}A`f}{{{d{h{n{}{{j{c}}{l{e}}}}}}Al}A`{}{}}{{{d{{Ab{c}}}}Al}A`n}{{}c{}}0000{{}Al}0{{}Ad}0{{{d{{Ab{c}}}}}Ajn}{{{d{f}}}Aj}{{{d{{b{c}}}}}Ajf}{{{d{{Ab{c}}}}AfAfg}{{A`{e}}}n{}{{Bj{{d{hc}}}{{Bh{{A`{e}}}}}}}}{{BlBfc}{{A`{{n{}{{j{c}}{l{e}}}}}}}{}{}}{Al{{A`{f}}}}{{BlBfAl{Bd{Al}}}{{A`{{Ab{c}}}}}n}{{}{{b{c}}}f}{{{d{{Ab{c}}}}}{{Bd{Al}}}n}{{{d{h{n{}{{j{c}}{l{e}}}}}}}{{A`{An}}}{}{}}{{{d{{Ab{c}}}}}{{A`{An}}}n}{{{d{{Ab{c}}}}}Adn}{{{d{h{n{}{{j{c}}{l{e}}}}}}Bn}A`{}{}}{{{d{{Ab{c}}}}Bn}A`n}{{{d{h{n{}{{j{c}}{l{e}}}}}}C`}A`{}{}}{{{d{h{n{}{{j{c}}{l{e}}}}}}AlAl}Ad{}{}}{{{d{{Ab{c}}}}AlAl}Adn}{{{d{h{n{}{{j{c}}{l{e}}}}}}Al}Ad{}{}}{{{d{{Ab{c}}}}Al}Adn}{{{d{{Ab{c}}}}Af}Adn}{{{d{h{n{}{{j{c}}{l{e}}}}}}e}A`{}{}}{{{d{{Ab{c}}}}BnC`}A`n}{{{d{{Ab{c}}}}}Afn}{dc{}}{{{d{{Ab{c}}}}AfAf}A`n}{c{{Cb{e}}}{}{}}0000{{}{{Cb{c}}}{}}0000{dCd}0000{{{d{h{n{}{{j{c}}{l{e}}}}}}}A`{}{}}{{{d{{Ab{c}}}}}A`n}{{{d{{Ab{c}}}}g}en{}{{Bj{}{{Bh{e}}}}}}{{{d{{Ab{c}}}}AfAfg}{{A`{e}}}n{}{{Bj{}{{Bh{{A`{e}}}}}}}}{CfCh}{CjCl}{CnBn}{D`Bn}{DbDd}{DfDd}{CjBn}{DhCh}{DjDl}{D`Ch}{DnCh}{DhBn}{E`Ch}{DjCh}{EbEd}{DnEd}{CnAl}{DbAl}{CnEf}{EhAj}0{CnAj}={EhCh}0{DfCh}{EjCh}25{D`Ef}{EbEf}{DnEf}","D":"Oj","p":[[5,"AxPerCpu",0,157],[1,"reference",null,null,1],[10,"AxArchPerCpu",0,157],[0,"mut"],[17,"CreateConfig"],[17,"SetupConfig"],[10,"AxArchVCpu",0,158],[8,"AxResult",159],[5,"AxVCpu",0,160],[1,"unit"],[6,"VCpuState",0,160],[1,"u8"],[1,"bool"],[1,"usize"],[6,"AxVCpuExitReason",0,161],[5,"Formatter",162],[8,"Result",162],[6,"Option",163,null,1],[8,"VCpuId",164],[17,"Output"],[10,"FnOnce",165],[8,"VMId",164],[5,"GuestPhysAddr",166],[8,"HostPhysAddr",166],[6,"Result",167,null,1],[5,"TypeId",168],[15,"CpuDown",125],[1,"u64"],[15,"NestedPageFault",125],[5,"MappingFlags",169],[15,"MmioRead",125],[15,"MmioWrite",125],[15,"SysRegRead",125],[5,"SysRegAddr",170],[15,"SysRegWrite",125],[15,"CpuUp",125],[15,"Hypercall",125],[1,"array"],[15,"IoWrite",125],[15,"FailEntry",125],[15,"IoRead",125],[5,"Port",170],[6,"AccessWidth",170],[15,"SendIPI",125],[15,"ExternalInterrupt",125],[10,"AxVCpuHal",0],[5,"AxVCpuInnerMut",0]],"r":[[0,157],[1,158],[2,157],[3,160],[4,161],[5,171],[6,160],[7,160],[8,161],[9,161],[10,158],[11,160],[12,161],[13,161],[14,160],[15,161],[16,161],[17,160],[18,161],[19,161],[21,161],[22,161],[23,161],[24,161],[25,160],[26,160],[27,161],[28,158],[29,161],[30,161],[31,161],[32,160],[33,157],[34,157],[35,158],[36,160],[37,157],[39,160],[40,161],[41,160],[42,157],[44,160],[45,161],[46,160],[47,160],[48,160],[49,160],[50,160],[51,157],[52,160],[53,160],[54,161],[55,160],[56,157],[58,160],[59,161],[60,160],[61,160],[62,160],[63,160],[64,157],[65,157],[66,157],[67,157],[68,160],[69,157],[70,158],[71,160],[72,157],[74,160],[75,161],[76,160],[81,160],[82,157],[83,157],[84,160],[85,158],[86,157],[87,160],[88,157],[89,160],[90,158],[91,160],[92,160],[93,158],[94,160],[95,158],[96,158],[97,160],[98,158],[99,160],[100,160],[101,158],[102,160],[103,160],[104,160],[105,160],[106,157],[108,160],[109,161],[110,160],[111,157],[113,160],[114,161],[115,160],[116,157],[118,160],[119,161],[120,160],[121,158],[122,160],[123,160],[124,160]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACAABQAmAAkAMQAEADcAAQBpAAAAawAOAA==","P":[[33,"A"],[35,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[36,"A"],[37,"T"],[47,""],[49,"T"],[50,""],[51,"A"],[52,""],[53,"A"],[54,""],[56,"T"],[61,"A"],[64,""],[65,"A"],[66,""],[67,"A"],[70,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[71,"A"],[72,"U"],[77,""],[81,"A"],[82,""],[83,"A"],[84,"A,T,F"],[85,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[86,""],[87,"A"],[90,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[91,"A"],[93,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[94,"A"],[95,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[97,"A"],[98,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[99,"A"],[101,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[102,"A"],[104,"T"],[105,"A"],[106,"U,T"],[111,"U"],[116,""],[121,"AxArchVCpu::CreateConfig,AxArchVCpu::SetupConfig"],[122,"A"],[123,"A,T,F"],[125,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6675]}